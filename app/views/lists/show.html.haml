#list
  #info
    %h3#name
      =h(@list.name)
    -form_for @list, :html => {:style => "display:none"} do |form|
      =form.text_field :name

  %form#new_item(method="post")
    =text_field_tag "item[body]"
    =submit_tag "add item"
  %ul#items.items
    -for item in @list.items
      -unless item.complete
        =render :partial => "lists/item", :object => item
      
  %ul#completed_items.items
    -for item in @list.items
      -if item.complete
        =render :partial => "lists/item", :object => item
  #hint hint: double-click an item to edit
        
:javascript
  $(document).ready(function() {
    var new_item_body = $("#new_item #item_body");
    new_item_body.focus();
    
    $("#new_item").submit(function(e) {
      e.preventDefault();
      var url = "#{list_items_path(@list, :format => :js)}";
      $.post(url, $(e.currentTarget).serialize(), function(data) {
        $("#items").append(data);
        new_item_body.val('');
      });
    });
    
    $("#items").sortable({axis:"y", cursor:'url(/images/grabbing.png)', containment:'parent', tolerance:'pointer', update:function(event, ui) {
      var data = {items : $("#items").sortable('toArray')};
      $.post("#{reorder_list_items_path(@list)}", data);
    }});
    
    $(".item").dblclick(function(e) {
      var form = $(this).find("form:first"),
          body = $(this).find(".body:first"),
          field = form.find(".item_body:first");
          
      body.hide();
      form.show();
      field.focus();
      
      form.submit(function(event) {
        event.preventDefault();
        $.post(form.attr("action")+".js", form.serialize(), function(data) {
          body.text(data.body);
          form.unbind();
          form.hide();
          body.show();
        }, "json");
      });
      field.blur(function() {
        form.submit()});
    });
    
    $("#info:first").click(function(e) {
      var name = $(this).find("#name"),
          form = $(this).find("form:first"),
          nameField = form.find("#list_name");
      name.hide();
      form.show();
      form.find("#list_name").focus();
      function updateList(formEvent) {
        formEvent.preventDefault();
        $.post(form.attr("action")+".js", form.serialize(), function(data) {
          name.text(data.name);
          form.unbind();
          nameField.unbind();
          form.hide();
          name.show();
        }, "json");
      }
      form.submit(updateList);
      nameField.blur(updateList);
    });
    
    $(".item_complete").change(function(e) {
      var item = $(this).parents(".item:first"),
          url = "/lists/#{@list.id}/items/" + item.attr("id") + ".js",
          data = {'_method':'put', 'item':{'complete':false}};
      if (item.hasClass("complete")) {
        item.removeClass("complete");
        $("#items").append(item);
      } else {
        item.addClass("complete");
        data.item.complete = true;
      }
      $.post(url, data);
    });
  });